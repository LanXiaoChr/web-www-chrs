import{_ as e,c as t,a2 as s,o as n}from"./chunks/framework.Gf1jShja.js";const g=JSON.parse('{"title":"Git 提交规范","description":"","frontmatter":{},"headers":[],"relativePath":"guide/git-commit-convention.md","filePath":"guide/git-commit-convention.md","lastUpdated":1721813896000}'),i={name:"guide/git-commit-convention.md"};function o(p,a,l,c,r,d){return n(),t("div",null,a[0]||(a[0]=[s(`<h1 id="git-commit-convention" tabindex="-1">Git 提交规范 <a class="header-anchor" href="#git-commit-convention" aria-label="Permalink to &quot;Git 提交规范 {#git-commit-convention}&quot;">​</a></h1><h2 id="convention" tabindex="-1">格式 <a class="header-anchor" href="#convention" aria-label="Permalink to &quot;格式 {#convention}&quot;">​</a></h2><p>消息必须由以下格式构成：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;</span></span>
<span class="line"><span>  │       │          │</span></span>
<span class="line"><span>  │       │          └─⫸ Commit Subject: 描述变化，结尾没有句号</span></span>
<span class="line"><span>  │       │</span></span>
<span class="line"><span>  │       └─⫸ Commit Scope: core|theme</span></span>
<span class="line"><span>  │</span></span>
<span class="line"><span>  └─⫸ Commit Type: build|ci|docs|feat|fix|perf|refactor|test</span></span></code></pre></div><h3 id="type" tabindex="-1">Type <a class="header-anchor" href="#type" aria-label="Permalink to &quot;Type {#type}&quot;">​</a></h3><ul><li><p><strong>build：</strong> 构建工具或外部依赖包的更改。</p></li><li><p><strong>ci：</strong> 持续集成的配置文件或脚本的更改。</p></li><li><p><strong>docs：</strong> 仅包含文档的更改。</p></li><li><p><strong>feat：</strong> 新增特性。</p></li><li><p><strong>fix：</strong> 修复 Bug 。</p></li><li><p><strong>perf：</strong> 提高性能的代码更改。</p></li><li><p><strong>refactor：</strong> 既不修复错误也不添加功能的代码更改（重构）。</p></li><li><p><strong>test：</strong> 添加或更改测试代码。</p></li></ul><h3 id="scope" tabindex="-1">Scope <a class="header-anchor" href="#scope" aria-label="Permalink to &quot;Scope {#scope}&quot;">​</a></h3><ul><li><p><strong>core：</strong> Electron 核心代码的更改。</p></li><li><p><strong>theme：</strong> 页面代码的更改。</p></li></ul><h3 id="subject" tabindex="-1">Subject <a class="header-anchor" href="#subject" aria-label="Permalink to &quot;Subject {#subject}&quot;">​</a></h3><p>使用摘要字段对更改进行简洁描述，结尾没有句号（。）。</p><h2 id="examples" tabindex="-1">举例 <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;举例 {#examples}&quot;">​</a></h2><ul><li>对 package.json 的修改</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ci: 更换应用图标</span></span></code></pre></div><ul><li>增加页面</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>feat(theme): 增加首页页面</span></span></code></pre></div><ul><li>修复 Bug</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>fix(theme): 计时器无法停止</span></span></code></pre></div>`,17)]))}const u=e(i,[["render",o]]);export{g as __pageData,u as default};
